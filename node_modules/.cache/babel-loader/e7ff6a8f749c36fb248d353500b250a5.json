{"ast":null,"code":"import { App } from 'vue';\nimport upperFirst from 'lodash/upperFirst';\nimport camelCase from 'lodash/camelCase';\n\nconst requireComponent = require.context( // The relative path of the components folder './'\n'.', // Whether or not to look in subfolders\nfalse, // The regular expression used to match base component filenames\n// /[A-Z]\\w+Base\\.vue$/,\n/base-[\\w-]+\\.vue$/); // const register = (app: App<Element>): void => {\n//   requireComponent.keys().forEach((fileName) => {\n//     // Get component config\n//     const componentConfig = requireComponent(fileName);\n//     // Get component name\n//     const componentName = fileName.split('/').pop()?.replace(/\\.\\w+$/, '') as string;\n//     app.component(componentName, componentConfig.default || componentConfig);\n//   });\n\n\nrequireComponent.keys().forEach(fileName => {\n  const componentConfig = requireComponent(fileName);\n  console.log(componentConfig.default); // Gets the file name regardless of folder depth\n  // const componentName = fileName\n  //   .split(\"/\")\n  //   .pop()\n  //   .split(\".\")[0];\n  // register the component locally\n\n  const componentName = upperFirst(camelCase(fileName.replace(/^\\.\\//, '').replace(/\\.\\w+$/, '')));\n  App.component(componentName, componentConfig.default || componentConfig);\n}); // export default {\n//   register,\n// };","map":{"version":3,"names":["App","upperFirst","camelCase","requireComponent","require","context","keys","forEach","fileName","componentConfig","console","log","default","componentName","replace","component"],"sources":["F:/soft/src/layout/base/index.js"],"sourcesContent":["import { App } from 'vue';\r\nimport upperFirst from 'lodash/upperFirst';\r\nimport camelCase from 'lodash/camelCase';\r\n\r\nconst requireComponent = require.context(\r\n  // The relative path of the components folder './'\r\n  '.',\r\n  // Whether or not to look in subfolders\r\n  false,\r\n  // The regular expression used to match base component filenames\r\n  // /[A-Z]\\w+Base\\.vue$/,\r\n  /base-[\\w-]+\\.vue$/,\r\n);\r\n\r\n// const register = (app: App<Element>): void => {\r\n//   requireComponent.keys().forEach((fileName) => {\r\n//     // Get component config\r\n//     const componentConfig = requireComponent(fileName);\r\n//     // Get component name\r\n//     const componentName = fileName.split('/').pop()?.replace(/\\.\\w+$/, '') as string;\r\n\r\n//     app.component(componentName, componentConfig.default || componentConfig);\r\n//   });\r\n\r\n\r\n  requireComponent.keys().forEach(fileName => {\r\n    const componentConfig = requireComponent(fileName);\r\n    console.log(componentConfig.default);\r\n    // Gets the file name regardless of folder depth\r\n    // const componentName = fileName\r\n    //   .split(\"/\")\r\n    //   .pop()\r\n    //   .split(\".\")[0];\r\n    // register the component locally\r\n\r\n    const componentName = upperFirst(camelCase(fileName.replace(/^\\.\\//,'').replace(/\\.\\w+$/,'')))\r\n    App.component(componentName, componentConfig.default || componentConfig);\r\n  });\r\n\r\n\r\n\r\n\r\n// export default {\r\n//   register,\r\n// };"],"mappings":"AAAA,SAASA,GAAT,QAAoB,KAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,OAAR,EACvB;AACA,GAFuB,EAGvB;AACA,KAJuB,EAKvB;AACA;AACA,mBAPuB,CAAzB,C,CAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAGEF,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,CAAgCC,QAAQ,IAAI;EAC1C,MAAMC,eAAe,GAAGN,gBAAgB,CAACK,QAAD,CAAxC;EACAE,OAAO,CAACC,GAAR,CAAYF,eAAe,CAACG,OAA5B,EAF0C,CAG1C;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAGZ,UAAU,CAACC,SAAS,CAACM,QAAQ,CAACM,OAAT,CAAiB,OAAjB,EAAyB,EAAzB,EAA6BA,OAA7B,CAAqC,QAArC,EAA8C,EAA9C,CAAD,CAAV,CAAhC;EACAd,GAAG,CAACe,SAAJ,CAAcF,aAAd,EAA6BJ,eAAe,CAACG,OAAhB,IAA2BH,eAAxD;AACD,CAZD,E,CAiBF;AACA;AACA"},"metadata":{},"sourceType":"module"}